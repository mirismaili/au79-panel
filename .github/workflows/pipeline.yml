name: CI/CD Pipeline

on:
  - push
  - pull_request

env:
  DOCKER_REGISTRY_MIRROR: docker.io
  DOCKER_IMAGE: ghcr.io/au79-panel
  NODE_VERSION: 22.10.0 # Sync this with the specified `NODE_VERSION` in "compose.yml"

jobs:
  calculate-build-version:
    name: Calculate Build Version
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{steps.vars.outputs.short_sha}}
      build_version: ${{steps.vars.outputs.build_version}}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
      - name: Calculate Build Version
        run: |
          echo "Calculating build version..."
          BUILD_VERSION=$(( \
            `git rev-list --count HEAD` - \
            `git rev-list --count v$(grep -Po '"version":\s*"\K[^"]*(?=")' package.json) || echo 0` \
          ))
          echo "build_version=$BUILD_VERSION" >> $GITHUB_OUTPUT

  install-all-dependencies:
    name: Install All Dependencies
    runs-on: ubuntu-latest
    needs: install-all-dependencies # Use NPM cache of `install-all-dependencies`
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.10.0
          cache: npm

      - name: Install all dependencies
        run: npm ci --ignore-scripts

  prettier-check:
    name: Prettier Check
    runs-on: ubuntu-latest
    needs: install-all-dependencies
    if: "!contains(github.event.head_commit.message, '[skip checks]') && !contains(github.event.head_commit.message, '[skip prettier]')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.10.0
          cache: npm

      - name: Install all dependencies
        run: npm ci --ignore-scripts

      - name: Run Prettier Check
        run: npm run prettier:check

  eslint-check:
    name: ESLint Check
    runs-on: ubuntu-latest
    needs: install-all-dependencies
    if: "!contains(github.event.head_commit.message, '[skip checks]') && !contains(github.event.head_commit.message, '[skip eslint]')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.10.0
          cache: npm

      - name: Install all dependencies
        run: npm ci --ignore-scripts

      - name: Run ESLint Check
        run: npm run lint

  typescript-check:
    name: Typescript Check
    runs-on: ubuntu-latest
    needs: install-all-dependencies
    if: "!contains(github.event.head_commit.message, '[skip checks]') && !contains(github.event.head_commit.message, '[skip tsc]')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.10.0
          cache: npm

      - name: Install all dependencies
        run: npm ci --ignore-scripts

      - name: Run Typescript Check
        run: npx tsc

  build-project-and-prepare-server:
    name: Build Project and Prepare Server
    runs-on: ubuntu-latest
    needs:
      - calculate-build-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GHCR_TOKEN}}

      - name: Debug1
        run: |
          echo ${GITHUB_SHA::8}
          echo "${GITHUB_SHA::8}"
          echo ${{needs.calculate-build-version.outputs.build_version }}
          echo "${{needs.calculate-build-version.outputs.build_version }}"

      - name: Setup Vars
        run: |
          echo "short_sha=${GITHUB_SHA::8}" >> $GITHUB_STATE
          echo "BUILD_VERSION=${{needs.calculate-build-version.outputs.build_version }}" >> $GITHUB_ENV

      - name: Debug2
        run: |
          echo ${GITHUB_SHA::8}
          echo "${GITHUB_SHA::8}"
          echo $BUILD_VERSION
          echo "$BUILD_VERSION"
          echo ${{ state.short_sha }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          build-args: NODE_VERSION BUILD_VERSION
          target: server
          tags: ghcr.io/${{github.repository}}:${{github.ref_name}}-${{state.short_sha}}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs:
      - prettier-check
      - eslint-check
      - typescript-check
      - prepare-server
    if: github.ref_name == 'main'
    steps:
      - name: Debug
        run: |
          echo DOCKER_TAG=${{github.ref_name}}-${GITHUB_SHA::8}
          echo "DOCKER_TAG=${{github.ref_name}}-${GITHUB_SHA::8}"

      - name: Deploy
        run: >-
          curl --fail-with-body -X POST -F DOCKER_TAG=${{github.ref_name}}-${GITHUB_SHA::8}
          -H "Authorization: Bearer ${{secrets.DEPLOYMENT_WEBHOOK_TOKEN}}"
          ${{secrets.DEPLOYMENT_WEBHOOK_URL}}
